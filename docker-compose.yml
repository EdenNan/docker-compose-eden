version: '3.7'

services:
  jobmanager:
    image: flink:1.9.0-scala_2.12
    ports:
      - "18081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  taskmanager:
    image: flink:1.9.0-scala_2.12
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./conf.d:/etc/nginx/conf.d

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.6.2
    restart: always
    ports:
      - '9200:9200'     #java、集群通信端口
      - '9300:9300'     #http通信端口
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    privileged: true    #环境变量
    volumes:
      - type: bind
        source: ./external_config/elasticsearch/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml


  elasticsearch1:
    container_name: elasticsearch1
    image: elasticsearch:7.6.2
    restart: always
    ports:
      - '9201:9200'     #java、集群通信端口
      - '9301:9300'     #http通信端口
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    privileged: true    #环境变量
    volumes:
      - type: bind
        source: ./external_config/elasticsearch/elasticsearch1.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml

  elasticsearch2:
    container_name: elasticsearch2
    image: elasticsearch:7.6.2
    restart: always
    ports:
      - '9202:9200'     #java、集群通信端口
      - '9302:9300'     #http通信端口
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    privileged: true    #环境变量
    volumes:
      - type: bind
        source: ./external_config/elasticsearch/elasticsearch2.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml

  kibana:
    container_name: kibana
    image: kibana:7.6.2
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
#       ELASTICSEARCH_HOSTS: http://host.docker.internal:19200
    depends_on:
      - elasticsearch

  oap:
    image: apache/skywalking-oap-server:8.3.0-es7
    container_name: skywalking-oap
    restart: always
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    ports:
      - 11800:11800
      - 12800:12800
    healthcheck:
      test: [ "CMD-SHELL", "/skywalking/bin/swctl" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      TZ: Asia/Shanghai
      SW_STORAGE: elasticsearch7
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
#    volumes:
#      - type: bind
#        source: ./external_config/skyWalking/application.yml
#        target: /skywalking/config/application.yml


  ui:
    image: apache/skywalking-ui:8.3.0
    container_name: skywalking-ui
    restart: always
    depends_on:
      - oap
    links:
      - oap
    ports:
      - 8082:8080
    environment:
      TZ: Asia/Shanghai
      SW_OAP_ADDRESS: oap:12800


  namenode:
    image: bde2020/hadoop-namenode:1.1.0-hadoop2.7.1-java8
    container_name: namenode
    hostname: namenode
#    volumes:
#      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
#    env_file:
#      - ./hadoop.env
    ports:
      - "50070:50070"
      - "8020:8020"

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:1.1.0-hadoop2.7.1-java8
    container_name: resourcemanager
    hostname: resourcemanager
    depends_on:
      - namenode
      - datanode1
#    env_file:
#      - ./hadoop.env
    ports:
      - "8088:8088"

  historyserver:
    image: bde2020/hadoop-historyserver:1.1.0-hadoop2.7.1-java8
    container_name: historyserver
    hostname: historyserver
    depends_on:
      - namenode
      - datanode1
#    volumes:
#      - hadoop_historyserver:/hadoop/yarn/timeline
#    env_file:
#      - ./hadoop.env
    ports:
      - "8188:8188"

  nodemanager1:
    image: bde2020/hadoop-nodemanager:1.1.0-hadoop2.7.1-java8
    container_name: nodemanager1
    hostname: nodemanager1
    depends_on:
      - namenode
      - datanode1
#    env_file:
#      - ./hadoop.env
    ports:
      - "8042:8042"

  datanode1:
    image: bde2020/hadoop-datanode:1.1.0-hadoop2.7.1-java8
    container_name: datanode1
    hostname: datanode1
    ports:
      - "50075:50075"
    depends_on:
      - namenode
#    volumes:
#      - hadoop_datanode1:/hadoop/dfs/data
#    env_file:
#      - ./hadoop.env

